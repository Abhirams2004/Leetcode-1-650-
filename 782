class Solution:
    def movesToChessboard(self, board: List[List[int]]) -> int:
        n = len(board)
        row_swaps, col_swaps = 0, 0

        # Check Board Validity
        for i in range(n):
            for j in range(n):
                if board[0][0] ^ board[i][0] ^ board[0][j] ^ board[i][j] == 1:
                    return -1
        if not (n // 2 <= sum(board[0]) <= (n + 1) // 2):
            return -1
        if not (n // 2 <= sum(board[i][0] for i in range(n)) <= (n + 1) // 2):
            return -1

        # Count Swaps
        for i in range(n):
            if board[i][0] == i % 2:
                row_swaps += 1
            if board[0][i] == i % 2:
                col_swaps += 1

        # Calculate Minimum Swaps
        if n % 2 == 1:
            if row_swaps % 2 == 1:
                row_swaps = n - row_swaps
            if col_swaps % 2 == 1:
                col_swaps = n - col_swaps
        else:
            row_swaps = min(row_swaps, n - row_swaps)
            col_swaps = min(col_swaps, n - col_swaps)

        return (row_swaps + col_swaps) // 2

class Solution:
    def cherryPickup(self, grid: List[List[int]]) -> int:
        n = len(grid)
        if grid[0][0] == -1 or grid[n-1][n-1] == -1:
            return 0
        @cache
        def dfs(i: int, j: int, k: int) -> int:
            if i - j < 0 or i - k < 0 or j < 0 or k < 0 or grid[i-k][k] == -1 or grid[i-j][j] == -1:
                return -1
            if i == j == k == 0:
                return grid[0][0]
            mx = max(dfs(i-1, j, k), dfs(i-1, j-1, k-1), dfs(i-1, j, k-1), dfs(i-1, j-1, k))
            return (grid[i-k][k] + (j != k) * grid[i-j][j] + mx) if mx != -1 else -1
        return max(dfs(2 * n - 2, n - 1, n - 1), 0)

class Solution:
    def restoreIpAddresses(self, s: str) -> List[str]:
        answer = []

        def backtrack(i, curr):
            # ip address cannot have more than 4 parts, must be same len as original
            if len(curr) == 4 and i == len(s):
                answer.append(".".join(curr))
                return
            elif len(curr) == 4 or i == len(s):
                return

            # pick the next 1, 2, 3 characters as a possibility
            for j in range(i + 1, len(s) + 1):
                s2 = s[i:j]

                # octet cannot start with 0 if len > 1
                if len(s2) > 1 and s2[0] == "0":
                    break

                if int(s2) >= 0 and int(s2) <= 255:
                    curr.append(s2)
                    backtrack(j, curr)
                    curr.pop()

        backtrack(0, [])

        return answer
        

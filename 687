# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestUnivaluePath(self, root: Optional[TreeNode]) -> int:
        def core(node):
            if node is None:
                return 0, 0
            leftArm, leftPath = core(node.left)
            rightArm, rightPath = core(node.right)
            if node.left and node.left.val == node.val:
                leftArm += 1
            else:
                leftArm = 0
            if node.right and node.right.val == node.val:
                rightArm += 1
            else:
                rightArm = 0
            bestArm = max(leftArm, rightArm)
            bestPath = max(leftPath, rightPath, leftArm + rightArm)
            return bestArm, bestPath
           
        return core(root)[1]

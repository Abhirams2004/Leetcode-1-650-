# Time: O(nlogn) + O(n) => O(nlogn)
# Space: O(n) - Since we are copying two arrays into new variables of the same size (Array Size).
class Solution:
	def checkPossibility(self, nums: List[int]) -> bool:
		arr1, arr2 = nums[:], nums[:]  # O(n) Space
		for i in range(len(nums)-1):  # O(n) Time
			if nums[i] > nums[i+1]:
				arr1[i], arr2[i+1] = nums[i+1], nums[i]
				break
		return arr1 == sorted(arr1) or arr2 == sorted(arr2)  # O(nlogn) Time
